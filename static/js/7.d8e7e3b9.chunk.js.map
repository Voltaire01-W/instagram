{"version":3,"sources":["services/firebase.js","constants/paths.js","hooks/use-user.js","components/header.js","components/profile/header.js","components/profile/photos.js","components/profile/index.js","pages/profile.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","getUserByUsername","map","item","data","docId","id","getUserByUserId","userId","user","getSuggestedProfiles","following","query","limit","profiles","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","followers","getPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","photosWithUserDetails","getUserPhotosByUserId","photos","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","toggleFollow","activeUserDocId","followingUserId","DEFAULT_IMAGE_PATH","useUser","useState","activeUser","setActiveUser","useEffect","getUserObjByUserId","Header","loggedInUser","useContext","UserContext","uid","FirebaseContext","history","useHistory","className","to","ROUTES","aria-label","src","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","title","onClick","auth","signOut","push","onKeyDown","event","key","onError","e","target","photosCount","followerCount","setFollowerCount","profile","fullName","profileUsername","setIsFollowingProfile","activeBtnFollow","handleToggleFollow","isLoggedInUserFollowingProfile","isFollowing","circle","height","width","count","Photos","imageSrc","caption","fillRule","clipRule","comments","Array","_","i","Profile","useReducer","state","newState","photosCollection","dispatch","getProfileInfoAndPhotos","useParams","setUser","checkUserExists"],"mappings":"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","file":"static/js/7.d8e7e3b9.chunk.js","sourcesContent":["import { firebase, FieldValue } from '../lib/firebase';\n\nexport async function doesUsernameExist(username) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get();\n\n  return result.docs.length > 0;\n}\n\nexport async function getUserByUsername(username) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get();\n\n  return result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }));\n}\n\n// get user from the firestore where userId === userId (passed from the auth)\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }));\n\n  return user;\n}\n\n// check all conditions before limit results\nexport async function getSuggestedProfiles(userId, following) {\n  let query = firebase.firestore().collection('users');\n\n  if (following.length > 0) {\n    query = query.where('userId', 'not-in', [...following, userId]);\n  } else {\n    query = query.where('userId', '!=', userId);\n  }\n  const result = await query.limit(10).get();\n\n  const profiles = result.docs.map((user) => ({\n    ...user.data(),\n    docId: user.id\n  }));\n\n  return profiles;\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId, // currently logged in user document id (karl's profile)\n  profileId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(loggedInUserDocId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(profileId)\n        : FieldValue.arrayUnion(profileId)\n    });\n}\n\nexport async function updateFollowedUserFollowers(\n  profileDocId, // currently logged in user document id (karl's profile)\n  loggedInUserDocId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(profileDocId)\n    .update({\n      followers: isFollowingProfile\n        ? FieldValue.arrayRemove(loggedInUserDocId)\n        : FieldValue.arrayUnion(loggedInUserDocId)\n    });\n}\n\nexport async function getPhotos(userId, following) {\n  // [5,4,2] => following\n  const result = await firebase\n    .firestore()\n    .collection('photos')\n    .where('userId', 'in', following)\n    .get();\n\n  const userFollowedPhotos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id\n  }));\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      // photo.userId = 2\n      const user = await getUserByUserId(photo.userId);\n      // raphael\n      const { username } = user[0];\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n\n  return photosWithUserDetails;\n}\n\nexport async function getUserPhotosByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection('photos')\n    .where('userId', '==', userId)\n    .get();\n\n  const photos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id\n  }));\n  return photos;\n}\n\nexport async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', loggedInUserUsername) // karl (active logged in user)\n    .where('following', 'array-contains', profileUserId)\n    .get();\n\n  const [response = {}] = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }));\n\n  return response.userId;\n}\n\nexport async function toggleFollow(\n  isFollowingProfile,\n  activeUserDocId,\n  profileDocId,\n  profileUserId,\n  followingUserId\n) {\n  // 1st param: karl's doc id\n  // 2nd param: raphael's user id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\n\n  // 1st param: karl's user id\n  // 2nd param: raphael's doc id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}\n","export const DEFAULT_IMAGE_PATH = '/images/avatars/default.png';\n","import { useState, useEffect } from 'react';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser(userId) {\n  const [activeUser, setActiveUser] = useState();\n\n  useEffect(() => {\n    async function getUserObjByUserId(userId) {\n      const [user] = await getUserByUserId(userId);\n      setActiveUser(user || {});\n    }\n\n    if (userId) {\n      getUserObjByUserId(userId);\n    }\n  }, [userId]);\n\n  return { user: activeUser, setActiveUser };\n}\n","import { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport FirebaseContext from '../context/firebase';\nimport UserContext from '../context/user';\nimport * as ROUTES from '../constants/routes';\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths';\nimport useUser from '../hooks/use-user';\n\nexport default function Header() {\n  const { user: loggedInUser } = useContext(UserContext);\n  const { user } = useUser(loggedInUser?.uid);\n  const { firebase } = useContext(FirebaseContext);\n  const history = useHistory();\n\n  return (\n    <header className=\"h-16 bg-white border-b border-gray-primary mb-8\">\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\n        <div className=\"flex justify-between h-full\">\n          <div className=\"text-gray-700 text-center flex items-center align-items cursor-pointer\">\n            <h1 className=\"flex justify-center w-full\">\n              <Link to={ROUTES.DASHBOARD} aria-label=\"Instagram logo\">\n                <img src=\"/images/logo.png\" alt=\"Instagram\" className=\"mt-2 w-6/12\" />\n              </Link>\n            </h1>\n          </div>\n          <div className=\"text-gray-700 text-center flex items-center align-items\">\n            {loggedInUser ? (\n              <>\n                <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                    />\n                  </svg>\n                </Link>\n\n                <button\n                  type=\"button\"\n                  title=\"Sign Out\"\n                  onClick={() => {\n                    firebase.auth().signOut();\n                    history.push(ROUTES.LOGIN);\n                  }}\n                  onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                      firebase.auth().signOut();\n                      history.push(ROUTES.LOGIN);\n                    }\n                  }}\n                >\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                    />\n                  </svg>\n                </button>\n                {user && (\n                  <div className=\"flex items-center cursor-pointer\">\n                    <Link to={`/p/${user?.username}`}>\n                      <img\n                        className=\"rounded-full h-8 w-8 flex\"\n                        src={`/images/avatars/${user?.username}.jpg`}\n                        alt={`${user?.username} profile`}\n                        onError={(e) => {\n                          e.target.src = DEFAULT_IMAGE_PATH;\n                        }}\n                      />\n                    </Link>\n                  </div>\n                )}\n              </>\n            ) : (\n              <>\n                <Link to={ROUTES.LOGIN}>\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n                  >\n                    Log In\n                  </button>\n                </Link>\n                <Link to={ROUTES.SIGN_UP}>\n                  <button\n                    type=\"button\"\n                    className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\n                  >\n                    Sign Up\n                  </button>\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport useUser from '../../hooks/use-user';\nimport { isUserFollowingProfile, toggleFollow } from '../../services/firebase';\nimport UserContext from '../../context/user';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\n\nexport default function Header({\n  photosCount,\n  followerCount,\n  setFollowerCount,\n  profile: {\n    docId: profileDocId,\n    userId: profileUserId,\n    fullName,\n    followers,\n    following,\n    username: profileUsername\n  }\n}) {\n  const { user: loggedInUser } = useContext(UserContext);\n  const { user } = useUser(loggedInUser?.uid);\n  const [isFollowingProfile, setIsFollowingProfile] = useState(null);\n  const activeBtnFollow = user?.username && user?.username !== profileUsername;\n\n  const handleToggleFollow = async () => {\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\n    setFollowerCount({\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1\n    });\n    await toggleFollow(isFollowingProfile, user.docId, profileDocId, profileUserId, user.userId);\n  };\n\n  useEffect(() => {\n    const isLoggedInUserFollowingProfile = async () => {\n      const isFollowing = await isUserFollowingProfile(user.username, profileUserId);\n      setIsFollowingProfile(!!isFollowing);\n    };\n\n    if (user?.username && profileUserId) {\n      isLoggedInUserFollowingProfile();\n    }\n  }, [user?.username, profileUserId]);\n\n  return (\n    <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n      <div className=\"container flex justify-center items-center\">\n        {profileUsername ? (\n          <img\n            className=\"rounded-full h-40 w-40 flex\"\n            alt={`${fullName} profile picture`}\n            src={`/images/avatars/${profileUsername}.jpg`}\n            onError={(e) => {\n              e.target.src = DEFAULT_IMAGE_PATH;\n            }}\n          />\n        ) : (\n          <Skeleton circle height={150} width={150} count={1} />\n        )}\n      </div>\n      <div className=\"flex items-center justify-center flex-col col-span-2\">\n        <div className=\"container flex items-center\">\n          <p className=\"text-2xl mr-4\">{profileUsername}</p>\n          {activeBtnFollow && isFollowingProfile === null ? (\n            <Skeleton count={1} width={80} height={32} />\n          ) : (\n            activeBtnFollow && (\n              <button\n                className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n                type=\"button\"\n                onClick={handleToggleFollow}\n                onKeyDown={(event) => {\n                  if (event.key === 'Enter') {\n                    handleToggleFollow();\n                  }\n                }}\n              >\n                {isFollowingProfile ? 'Unfollow' : 'Follow'}\n              </button>\n            )\n          )}\n        </div>\n        <div className=\"container flex mt-4\">\n          {!followers || !following ? (\n            <Skeleton count={1} width={677} height={24} />\n          ) : (\n            <>\n              <p className=\"mr-10\">\n                <span className=\"font-bold\">{photosCount}</span> photos\n              </p>\n              <p className=\"mr-10\">\n                <span className=\"font-bold\">{followerCount}</span>\n                {` `}\n                {followerCount === 1 ? `follower` : `followers`}\n              </p>\n              <p className=\"mr-10\">\n                <span className=\"font-bold\">{following?.length}</span> following\n              </p>\n            </>\n          )}\n        </div>\n        <div className=\"container mt-4\">\n          <p className=\"font-medium\">{!fullName ? <Skeleton count={1} height={24} /> : fullName}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  photosCount: PropTypes.number.isRequired,\n  followerCount: PropTypes.number.isRequired,\n  setFollowerCount: PropTypes.func.isRequired,\n  profile: PropTypes.shape({\n    docId: PropTypes.string,\n    userId: PropTypes.string,\n    fullName: PropTypes.string,\n    username: PropTypes.string,\n    followers: PropTypes.array,\n    following: PropTypes.array\n  }).isRequired\n};\n","/* eslint-disable no-nested-ternary */\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\n\nexport default function Photos({ photos }) {\n  return (\n    <div className=\"h-16 border-t border-gray-primary mt-12 pt-4\">\n      <div className=\"grid grid-cols-3 gap-8 mt-4 mb-12\">\n        {!photos\n          ? new Array(12).fill(0).map((_, i) => <Skeleton key={i} width={320} height={400} />)\n          : photos.length > 0\n          ? photos.map((photo) => (\n              <div key={photo.docId} className=\"relative group\">\n                <img src={photo.imageSrc} alt={photo.caption} />\n\n                <div className=\"absolute bottom-0 left-0 bg-gray-200 z-10 w-full justify-evenly items-center h-full bg-black-faded group-hover:flex hidden\">\n                  <p className=\"flex items-center text-white font-bold\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"w-8 mr-4\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                    {photo.likes.length}\n                  </p>\n\n                  <p className=\"flex items-center text-white font-bold\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      className=\"w-8 mr-4\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                    {photo.comments.length}\n                  </p>\n                </div>\n              </div>\n            ))\n          : null}\n      </div>\n\n      {!photos || (photos.length === 0 && <p className=\"text-center text-2xl\">No Posts Yet</p>)}\n    </div>\n  );\n}\n\nPhotos.propTypes = {\n  photos: PropTypes.array\n};\n","import { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport Photos from './photos';\nimport { getUserPhotosByUserId } from '../../services/firebase';\n\nexport default function Profile({ user }) {\n  const reducer = (state, newState) => ({ ...state, ...newState });\n  const initialState = {\n    profile: {},\n    photosCollection: null,\n    followerCount: 0\n  };\n\n  const [{ profile, photosCollection, followerCount }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  useEffect(() => {\n    async function getProfileInfoAndPhotos() {\n      const photos = await getUserPhotosByUserId(user.userId);\n      dispatch({ profile: user, photosCollection: photos, followerCount: user.followers.length });\n    }\n    getProfileInfoAndPhotos();\n  }, [user.username]);\n\n  return (\n    <>\n      <Header\n        photosCount={photosCollection ? photosCollection.length : 0}\n        profile={profile}\n        followerCount={followerCount}\n        setFollowerCount={dispatch}\n      />\n      <Photos photos={photosCollection} />\n    </>\n  );\n}\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    dateCreated: PropTypes.number,\n    emailAddress: PropTypes.string,\n    followers: PropTypes.array,\n    following: PropTypes.array,\n    fullName: PropTypes.string,\n    userId: PropTypes.string,\n    username: PropTypes.string\n  })\n};\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getUserByUsername } from '../services/firebase';\nimport * as ROUTES from '../constants/routes';\nimport Header from '../components/header';\nimport UserProfile from '../components/profile';\n\nexport default function Profile() {\n  const { username } = useParams();\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    async function checkUserExists() {\n      const [user] = await getUserByUsername(username);\n      if (user?.userId) {\n        setUser(user);\n      } else {\n        history.push(ROUTES.NOT_FOUND);\n      }\n    }\n\n    checkUserExists();\n  }, [username, history]);\n\n  return user?.username ? (\n    <div className=\"bg-gray-background\">\n      <Header />\n      <div className=\"mx-auto max-w-screen-lg\">\n        <UserProfile user={user} />\n      </div>\n    </div>\n  ) : null;\n}\n"],"sourceRoot":""}